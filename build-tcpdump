#!/bin/sh

# --------------------------------------
#
#   Title: build-tcpdump
#   Original Author: Loic Poulain, loic.poulain@gmail.com
#   Modified by: Norbert Copones, norbert.copones@gmail.com
#
#   Purpose: download & build tcpdump for arm/aarch64 android platform
#
# set defaults
tcpdump_ver=4.9.1
libpcap_ver=1.8.1
android_api_def=24
toolchain64_def=aarch64-linux-android-4.9
toolchain32_def=arm-linux-androideabi-4.9
ccompile64_def=aarch64-linux-android-
ccompile32_def=arm-linux-androideabi-
host32_def=arm-linux
host64_def=aarch64-linux
ndk_dir_def=/home/norbert/android/android-ndk-r13b

tcpdump_dir=tcpdump-${tcpdump_ver}
libpcap_dir=libpcap-${libpcap_ver}


if [ ${NDK} ]
then
	ndk_dir=${NDK}
else
	ndk_dir=${ndk_dir_def}
fi

ndk_dir=`readlink -f ${ndk_dir}`

if [ ${ANDROID_API} ]
then
	android_api=${ANDROID_API}
else
	android_api=${android_api_def}
fi

if [ "${ARCH}" = "arm" ]
then
	cctoolchain=${toolchain32_def}
	ccompile=${ccompile32_def}
	cchost=${host32_def}
else
	ARCH=arm64
	cctoolchain=${toolchain64_def}
	ccompile=${ccompile64_def}
	cchost=${host64_def}
fi

echo "==> Compiling using the following:"
echo "==> Android NDK path: ${ndk_dir}"
echo "==> Android API: ${android_api}"
echo "==> Arch: ${ARCH}"

exit_error()
{
	echo "==> Error!"
	exit 1
}

{
	if [ $# -ne 0 ]
	then
		if [ -d $1 ]
		then
			cd $1
		else
			echo directory $1 not found
			exit_error
		fi
	else
		[ ! -d tcpdumpbuild ] && mkdir tcpdumpbuild
		cd tcpdumpbuild
	fi
}



# create env
{
	echo "==> Creating toolchain"

	if [ -d toolchain ]
	then
		echo Toolchain already exist! Nothing to do.
	else
		echo Creating toolchain...
		mkdir toolchain
		${ndk_dir}/build/tools/make_standalone_toolchain.py --api ${android_api} --arch ${ARCH} --install-dir=toolchain --force
		
		if [ $? -ne 0 ]
		then
			rm -fr toolchain
			exit_error
		fi
	fi

	export CC=${ccompile}gcc
	export CFLAGS="-fPIE -pie -s -Os"
	export RANLIB=${ccompile}ranlib
	export AR=${ccompile}ar
	export LD=${ccompile}ld
	export PATH=`pwd`/toolchain/bin:$PATH
}

# download & untar libpcap + tcpdump
{
	echo "==> Downloading libpcap and tcpdump"
	
	tcpdump_file=${tcpdump_dir}.tar.gz
	libpcap_file=${libpcap_dir}.tar.gz
	tcpdump_link=http://www.tcpdump.org/release/${tcpdump_file}
	libpcap_link=http://www.tcpdump.org/release/${libpcap_file}
	
	if [ -f ${tcpdump_file} ]
	then
		echo "==> ${tcpdump_file} already downloaded! Nothing to do."
	else
		echo Download ${tcpdump_file}...
		wget ${tcpdump_link}
		if [ ! -f ${tcpdump_file} ]
		then
			exit_error
		fi
	fi
	
	if [ -f ${libpcap_file} ]
	then
		echo "==> ${libpcap_file} already downloaded! Nothing to do."
	else
		echo Download ${libpcap_file}...
		wget ${libpcap_link}
		if [ ! -f ${libpcap_file} ]
		then
			exit_error
		fi
	fi
	
	if [ -d ${tcpdump_dir} ]
	then
		echo "==> ${tcpdump_dir} directory already exist! Nothing to do."
	else
		echo untar ${tcpdump_file}
		tar -zxf ${tcpdump_file}
	fi
	
	if [ -d ${libpcap_dir} ]
	then
		echo "==> ${libpcap_dir} directory already exist! Nothing to do."
	else
		echo untar ${libpcap_file}
		tar -zxf ${libpcap_file}
	fi
}

# build libpcap
{
	cd ${libpcap_dir}

	echo "==> Configuring libpcap"

	chmod +x configure
	./configure --host=${cchost} --with-pcap=linux

	if [ $? -ne 0 ]
	then
		exit_error
	fi	

	echo "==> Building libpcap"

	chmod +x runlex.sh
	make

	if [ $? -ne 0 ]
	then
		exit_error
	fi

	cd ..
}

# build tcpdump
{
	cd ${tcpdump_dir}
	
	echo "==> Configuring tcpdump"
	
	chmod +x configure
	./configure --host=${cchost} --with-pcap=linux --with-crypto

	if [ $? -ne 0 ]
	then
		exit_error
	fi	

	echo "==> Building tcpdump"
	
	#setprotoent endprotoen not supported on android
	sed -i".bak" "s/setprotoent/\/\/setprotoent/g" print-isakmp.c
	sed -i".bak" "s/endprotoent/\/\/endprotoent/g" print-isakmp.c
	
	#NBBY is not defined => FORCE definition
	make CFLAGS=-DNBBY=8 # for tcpdump < 4.2.1 (CFLAGS refefined in Makefile) => just make
	
	if [ $? -ne 0 ]
	then
		exit_error
	fi
	
	cd ..
}

cp ${tcpdump_dir}/tcpdump .
chmod +x tcpdump
echo "==> Finished building. Binary located at `pwd`/tcpdump."
